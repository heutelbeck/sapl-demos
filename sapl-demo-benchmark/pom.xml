<!--

    Copyright (C) 2017-2024 Dominic Heutelbeck (dominic@heutelbeck.com)

    SPDX-License-Identifier: Apache-2.0

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>io.sapl</groupId>
		<artifactId>sapl-demo-parent</artifactId>
		<version>3.0.0-SNAPSHOT</version>
		<relativePath>../sapl-demo-parent/pom.xml</relativePath>
	</parent>

	<artifactId>sapl-demo-benchmark</artifactId>
	<packaging>jar</packaging>

	<name>SAPL PDP benchmark tests</name>

	<properties>
		<rsocket.version>1.1.3</rsocket.version>
		<jmh.version>1.36</jmh.version>
	</properties>

	<dependencies>

		<!-- Testcontainer library required for Benchmark with target=docker -->
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
		</dependency>

		<!-- Library to support the benchmark chart generation -->
		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>jfreechart</artifactId>
			<version>1.5.4</version>
		</dependency>

		<!-- A library for parsing command-line parameters -->
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>4.7.3</version>
		</dependency>

		<!-- Logging library -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
		</dependency>

		<!-- SAPL -->
		<dependency>
			<groupId>io.sapl</groupId>
			<artifactId>sapl-lang</artifactId>
		</dependency>
		<dependency>
			<groupId>io.sapl</groupId>
			<artifactId>sapl-pdp-embedded</artifactId>
		</dependency>
		<dependency>
			<groupId>io.sapl</groupId>
			<artifactId>sapl-pdp-remote</artifactId>
		</dependency>

		<!-- Dependency for the RSocket -->
		<dependency>
			<groupId>io.rsocket</groupId>
			<artifactId>rsocket-core</artifactId>
		</dependency>
		<dependency>
			<groupId>io.rsocket</groupId>
			<artifactId>rsocket-transport-netty</artifactId>
		</dependency>

		<!-- Project Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Dependency for the WebClient -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webflux</artifactId>
		</dependency>

		<!-- Dependency for SSL Handling -->
		<dependency>
			<groupId>io.projectreactor.netty</groupId>
			<artifactId>reactor-netty</artifactId>
		</dependency>

		<!-- Dependency for Java Microbenchmark Harness (JMH) -->
		<dependency>
			<groupId>org.openjdk.jmh</groupId>
			<artifactId>jmh-core</artifactId>
			<version>${jmh.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjdk.jmh</groupId>
			<artifactId>jmh-generator-annprocess</artifactId>
			<version>${jmh.version}</version>
		</dependency>

		<!-- Dependency for Report generation using Jinja templating  -->
		<dependency>
			<groupId>com.hubspot.jinjava</groupId>
			<artifactId>jinjava</artifactId>
			<version>2.7.1</version>
		</dependency>

		<!-- Dependency required for Argon2 secret generation -->
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcpkix-jdk15on</artifactId>
			<version>1.70</version>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<repositories>
		<repository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
	</repositories>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.11.0</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<annotationProcessorPaths>
							<path>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok</artifactId>
								<version>${version.lombok}</version>
							</path>
							<path>
								<groupId>org.openjdk.jmh</groupId>
								<artifactId>jmh-generator-annprocess</artifactId>
								<version>${jmh.version}</version>
							</path>
						</annotationProcessorPaths>
						<compilerArgs>
							<arg>-parameters</arg>
						</compilerArgs>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<!-- This plug-in creates a so-called "fat JAR", i.e., a JAR file which
			contains the code from this module and in addition, all dependencies are
			packed into the JAR as well. This results in a self-contained executable
			Java application directly runnable via 'java -jar'. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>io.sapl.benchmark.BenchmarkCommand</mainClass>
						</manifest>
					</archive>
					<descriptors>
						<!-- See: https://stackoverflow.com/questions/65172081/maven-xtext-the-string-resource-ui-diagnosticroot-diagnostic-could-not-be-l -->
						<!-- See: https://stackoverflow.com/questions/8085996/maven-overwrite-resource-file-in-dependency/24578209#24578209 -->
						<descriptor>src/main/assembly/fatjar.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>create-archive</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>