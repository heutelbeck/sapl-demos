#
# Copyright Â© 2017-2024 Dominic Heutelbeck (dominic@heutelbeck.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Note: when updating actions version pinning can be done using:
# https://app.stepsecurity.io/secureworkflow before committing the changes.

name: Build

on:
  workflow_dispatch:
  push:
    branches: [master]
  repository_dispatch:
    branches: [master]

jobs:
  tests:
    strategy:
      matrix:
        java: [ '17', '21' ]
        os: [ubuntu-latest ] #, windows-latest, macos-latest]
    name: JDK ${{ matrix.java }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20

    steps:
    - name: Check out
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        fetch-depth: 0

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93 # v4.0.0
      with:
        distribution: 'adopt'
        java-version: ${{ matrix.java }}
        cache: 'maven'

    - name: Run tests
      # make sure to activate Vaadin priduction to catch potential errors during vite JS processing
      run: mvn -B package -Pproduction

    - name: Clean up local repository before caching (Linux/Mac)
      if: ${{ matrix.os != 'windows-latest'}}
      run: rm -rf ~/.m2/repository/io/sapl

    - name: Clean up local repository before caching (Win)
      if: ${{ matrix.os == 'windows-latest'}}
      run: rm -Recurse -Force ~/.m2/repository/io/sapl

  analyze:
    needs: [tests]
    name: Code Analysis, Test Coverage, Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Check out
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93 # v4.0.0
      with:
        distribution: 'adopt'
        java-version: 17
        cache: 'maven'

    - name: Add auth-server to /etc/hosts for OAuth Integration Tests
      run: sudo sh -c 'echo "127.0.0.1 auth-server" >> /etc/hosts'
      
    - name: Build Modules
      run: mvn -B install -DskipTests -pl !:sapl-demo-testing

    - name: Build Integration Test Images
      run: mvn -B dockerfile:build -pl :sapl-demo-oauth2-jwt-authorization-server,:sapl-demo-oauth2-jwt-resource-server -P docker -DskipTests

    - name: Run analysis (JaCoCo, Sonar)
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B org.jacoco:jacoco-maven-plugin:0.8.7:prepare-agent verify org.jacoco:jacoco-maven-plugin:0.8.7:report sonar:sonar failsafe:integration-test -P coverage,it -DskipITs=false -Dsonar.host.url=https://sonar.ftk.de -Dsonar.login=${SONAR_TOKEN} -Dsonar.exclusions=**/xtext-gen/**/*,**/xtend-gen/**/*,**/emf-gen/**/* -pl !:sapl-demo-oauth2-jwt-client-application
      
    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@99626ea7e2020a8ab987073a1e127e2597102694 # v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 1
        keep_minimum_runs: 6
        
    - name: Clean up local repository before caching
      run: rm -rf ~/.m2/repository/io/sapl

  dockerize:
    needs: [analyze]
    name: Deliver server images
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Check out
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93 # v4.0.0
      with:
        distribution: 'adopt'
        java-version: 17
        cache: 'maven'

    - name: Build SAPL Demo Playground Image
      run: mvn -B spring-boot:build-image -pl sapl-demo-playground -Pproduction -DskipTests

    - name: Log in to the Container registry
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHUB_ACCESS_TOKEN }}

    - name: Get version
      if: ${{ (github.ref == 'refs/heads/master') && (matrix.os == 'ubuntu-latest') && (matrix.java == '17') }}
      id: get-version
      run: |
        VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )
        echo "version=$VERSION" >> $GITHUB_OUTPUT        
        
    - name: Push Server LT Image to ghcr.io
      if: ${{ (github.ref == 'refs/heads/master') && (matrix.os == 'ubuntu-latest') && (matrix.java == '17') }}
      run: |
        docker push ghcr.io/heutelbeck/sapl-demo-playground:${{ steps.get-version.outputs.VERSION }}

    - name: Clean up local repository before caching 
      run: rm -rf ~/.m2/repository/io/sapl
