test "policyWithSimpleFunction" {
	scenario "test_policyWithSimpleFunction"
    register
    	- library TemporalFunctionLibrary
    when subject "willi" attempts action "read" on resource "something"
    then expect permit;

	scenario "test_policyWithSimpleMockedFunction"
    given
    	- function "time.dayOfWeek" returns "SATURDAY"
    when subject "willi" attempts action "read" on resource "something"
    then expect permit;

	scenario "test_policyWithSimpleMockedFunction_VerifyTimesCalled"
    given
    	- function "time.dayOfWeek" returns stream "SATURDAY"
    when subject "willi" attempts action "read" on resource "something"
    then expect permit;
}

test "policySimple" {
	scenario "test_simplePolicy_permit"
	with environment { "key": "value", "key": "value"}
    when subject "willi" attempts action "read" on resource "something"
    then expect permit;

    scenario "test_simplePolicy_deny"
    with environment { "key": "value", "key": "value"}
    when subject "not_willi" attempts action "read" on resource "something"
    then expect deny;
}