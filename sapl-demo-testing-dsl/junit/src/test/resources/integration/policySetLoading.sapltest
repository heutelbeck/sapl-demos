//structure follow exactly the available structure for unit tests.
//the only difference is, how the used policies are defined
//see unit tests for details/explanations of allowed syntax besides policy definition
requirement "should grant read access for WILLI on foo depending on policy set and PDP Config" {
	scenario "WILLI tries to read foo using single identifier"
    given
    	- set "policiesIT" //without special setup this identifier refers to the folder where all polices (and the pdp.json containing the PDP Configuration) are located. Has to be located in src/main/resources (or in a folder structure below this folder)
    when "WILLI" attempts "read" on "foo" //defines the AuthorizationSubscription that should be used for the test
    expect permit;

    scenario "WILLI tries to read foo using concrete policies definition with default pdp configuration"
    given
    	// if the pdp Configuration path is ommited, the default Strategy DENY_OVERRIDES is used
    	- policies "policiesIT/policy_A", "policiesIT/policy_B", "policiesIT/policy_C" //list of policies to use. Has to be located in src/main/resources (or in a folder structure below this folder)
    when "WILLI" attempts "read" on "foo"
    expect deny;

    scenario "WILLI tries to read foo using concrete policies definition with concrete pdp configuration"
    given
    	- policies "policiesIT/policy_A", "policiesIT/policy_B", "policiesIT/policy_C" with pdp configuration "policiesIT" //search policiesIT folder for a pdp.json file to load configuration from in this case same behavior as first scenario
    when "WILLI" attempts "read" on "foo"
    expect permit;

    scenario "WILLI tries to read foo using single identifier and variable override"
    given
    	- set "policiesIT" //without special setup this identifier refers to the folder where all polices (and the pdp.json containing the PDP Configuration) are located. Has to be located in src/main/resources (or in a folder structure below this folder)
        // additionally you can specify the used pdp variables manually, there overwriting the ones defined in pdp.json
        - pdp variables {}
    when "WILLI" attempts "read" on "foo" //defines the AuthorizationSubscription that should be used for the test
    expect permit;

    scenario "WILLI tries to read foo using single identifier and variable + combining algorithm override"
    //given has to follow order:
    	// - policy definiton
        // - pdp variables (optional)
        // - pdp combining-algorithm (optional)
        // - environment (optional)
        // - Imports / Mock Definitions (optional)
    given
    	- set "policiesIT" //without special setup this identifier refers to the folder where all polices (and the pdp.json containing the PDP Configuration) are located. Has to be located in src/main/resources (or in a folder structure below this folder)
        // additionally you can specify the used pdp variables manually, there overwriting the ones defined in pdp.json
        - pdp variables {}
        // additionally you can specify the used combining-algorithm manually, there overwriting the one defined in pdp.json
        - pdp combining-algorithm deny-overrides
        - environment {}
        - static-function-library "filter"
    when "WILLI" attempts "read" on "foo" //defines the AuthorizationSubscription that should be used for the test
    expect deny;
}