requirement "Policy Simple should grant read access for willi on something" {
	scenario "willi with authority ROLE_ADMIN can execute action with java.name=findById on complex resource with obligation and transformed resource"
    given
    	- policy "policyWithObligationAndResource" //this policy uses the FilterFunctionLibrary to blacken parts of the resource and puts them into an obligation
        - static-function-library "filter" //by using a static import (FunctionLibrary which requires no instance since all methods are static) we can refer to a specific registration in our io.sapl.demo.testing.dsl.junit.TestAdapter by name (e.g. Map.of(ImportType.STATIC_FUNCTION_LIBRARY, Map.of("filter", FilterFunctionLibrary.class)))
    //complex subject definition this time, setting name and required authority
    when
    {
    	"name": "willi",
        "authority": "ROLE_ADMIN"
    }
    //action definition contains a nested object under the key "java" with a property "name" being "findById"
    attempts
    {
    	"java": {
        	"name": "findById"
        }
    }
    on
    {
    	"id": 56,
        "diagnosisText": "diagnosisText",
        "icd11Code": "icd11Code"
    }
    //we expect a permit here and also want to verify the correct obligation
    //since the blacken function of our imported FunctionLibrary is applied to the resource, we can do a non exact match here for cases where we might not know the exact AuthorizationDecision (e.g. timestamps/Ids generated on server side)
    //here we expect the obligation to be an object which we can define conditions for after the "where" keyword
    expect permit with obligations
    {
    	//there needs to be a key with text value "logAccess"
    	"type": "logAccess",
        // we know the message
        "message": "willi has accessed patient data (id=56) as an administrator."
    } with resource {
    	//here the blacken of our imported FunctionLibrary is applied
    	"diagnosisText": "█████████████",
        //here the blacken of our imported FunctionLibrary is applied
        "icd11Code": "ic███████",
        "id": 56
    };
}