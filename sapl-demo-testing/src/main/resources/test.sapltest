policySimple tests {
    when willi attempts read on something
    then expect single permit;
}

policyWithSimpleFunction tests {
    given functionLibrary TemporalFunctionLibrary
    when willi attempts read on something
    then expect single permit;

    given function time.dayOfWeek returns "SATURDAY"
    when willi attempts read on something
    then expect single permit;

    given function time.dayOfWeek returns "SATURDAY" called 1 times
    when willi attempts read on something
    then expect single permit;
}

policyWithSimplePIP tests {
    given attribute test.upper returns "WILLI"
    when willi attempts read on something
    then expect single permit;

    given PIP abc
    when willi attempts read on something
    then expect single permit;
}

policyWithMultipleFunctionsOrPIPs tests {
    given
    attribute test.upper returns "WILLI" and
    function time.dayOfWeekFrom returns "SATURDAY"
    when willi attempts read on something
    then expect single permit;
}

policyStreaming tests {
    given
    attribute time.now returns
    "2021-02-08T16:16:01.000Z"
    "2021-02-08T16:16:02.000Z"
    "2021-02-08T16:16:03.000Z"
    "2021-02-08T16:16:04.000Z"
    "2021-02-08T16:16:05.000Z"
    "2021-02-08T16:16:06.000Z"
    and functionLibrary TemporalFunctionLibrary
    when ROLE_DOCTOR attempts read on heartBeatData
    then expect notApplicable 4 times
    then expect permit 2 times;

    given
    virtualTime and
    attribute time.now returns
    "2021-02-08T16:16:01.000Z"
    "2021-02-08T16:16:02.000Z"
    "2021-02-08T16:16:03.000Z"
    "2021-02-08T16:16:04.000Z"
    "2021-02-08T16:16:05.000Z"
    "2021-02-08T16:16:06.000Z"
    for 1
    and functionLibrary TemporalFunctionLibrary
    when ROLE_DOCTOR attempts read on heartBeatData
    then wait for 1 seconds
    then expect notApplicable 1 times
    then wait for 1 seconds
    then expect notApplicable 1 times
    then wait for 1 seconds
    then expect notApplicable 1 times
    then wait for 1 seconds
    then expect notApplicable 1 times
    then wait for 1 seconds
    then expect permit 1 times
    then wait for 1 seconds
    then expect permit 1 times
    then wait for 1 seconds;

    given virtualTime and
    attribute time.now returns
    "2021-02-08T16:16:01.000Z"
    "2021-02-08T16:16:02.000Z" and
    function time.secondOf returns 4 once and
    function time.secondOf returns 5 once and
    functionLibrary TemporalFunctionLibrary
    when ROLE_DOCTOR attempts read on heartBeatData
    then expect notApplicable 1 times
    then expect permit 1 times;

    given attribute time.now returns
    "value"
    "doesn't"
    "matter"
    and
    function time.secondOf returns 3 4 5 once and
    functionLibrary TemporalFunctionLibrary
    when ROLE_DOCTOR attempts read on heartBeatData
    then expect notApplicable 2 times
    then expect permit 1 times;

    given attribute time.now returns
    "value"
    "doesn't"
    "matter"
    and
    function time.secondOf returns 5 called 3 times
    and
    functionLibrary TemporalFunctionLibrary
    when ROLE_DOCTOR attempts read on heartBeatData
    then expect permit 3 times;
}

policyWithComplexFunction tests {
    given
    attribute company.pip1 and
    attribute company.pip2 and
    function company.complexFunction parameters matching is 1 is "foo" returns true and
    function company.complexFunction parameters matching is 2 any returns true and
    function company.complexFunction parameters matching any any returns false
    when User1 attempts read on heartBeatData
    then let company.pip1 return 1
    then let company.pip2 return "foo"
    then expect permit 1 times
    then let company.pip2 return "bar"
    then expect notApplicable 1 times
    then let company.pip1 return 2
    then expect permit 1 times
    then let company.pip2 return "xxx"
    then expect permit 1 times
    then let company.pip1 return 3
    then expect notApplicable 1 times;
}

policyDocumentWithMultipleCallsToSameAttribute tests {
    given
    attribute time.now returns 1 2 3 4 5 6 and
    function time.secondOf returns 1 15 25 25 35 35 45 45 45 55 55 55 once
    when WILLI attempts read on something
    then matching permit obligation "A"
    then matching permit obligation "A"
    then matching permit obligation "B"
    then matching permit obligation "B"
    then matching permit obligation "C"
    then matching permit obligation "C";

    given
    attribute time.now returns 1 2 3 4 5 6 and
    function time.secondOf parameters matching val 1 returns 1 and
    function time.secondOf parameters matching val 2 returns 15 and
    function time.secondOf parameters matching val 3 returns 25 and
    function time.secondOf parameters matching val 4 returns 35 and
    function time.secondOf parameters matching val 5 returns 45 and
    function time.secondOf parameters matching val 6 returns 55
    when WILLI attempts read on something
    then matching permit obligation "A"
    then matching permit obligation "A"
    then matching permit obligation "B"
    then matching permit obligation "B"
    then matching permit obligation "C"
    then matching permit obligation "C";
}